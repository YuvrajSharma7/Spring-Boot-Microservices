spring.application.name=currency-exchange
server.port=8000

#h2 database configs
spring.jap.show-sql=true
spring-datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true
spring.datasource.generate-unique-name=false
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=root
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.datasource.platform=h2

# by default spring tries to insert the data before tables are created to make it after table creation use below property
spring.jpa.defer-datasource-initialization=true

# eureka server Url
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# to resolve below DnsResolver error add this property in API gateway and downstream microservice
#java.net.UnknownHostException: Failed to resolve 'WKWEJ808092717.global.publicisgroupe.net' [A(1)]
# after 3 queries at io.netty.resolver.dns.DnsResolveContext.finishResolve
eureka.instance.hostname=localhost

# circuit breaker properties
# when the service is momentarily down we use below 3 retry properties
resilience4j.retry.instances.sample-api.maxRetryAttempts=5
# wait duration before each retry is fixed around 1 second
resilience4j.retry.instances.sample-api.waitDuration=1s
# wait duration before each subsequent retry increases exponentially
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true

# to switch the circuitbreaker to open state when 90% of request fails
resilience4j.circuitbreaker.instances.default.failureRateThreshold=90
# to limit API request to 20 in 10 seconds, on API where @RateLimiter
resilience4j.ratelimiter.instances.default.limitForPeriod=20
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=10s
# to limit no. of concurrent request allowed at api where @Bulkhead annotation is mentioned
resilience4j.bulkhead.instances.default.maxConcurrentCalls=10
resilience4j.bulkhead.instances.sample-api.maxConcurrentCalls=20

